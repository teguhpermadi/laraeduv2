use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

$target = Target::with('dimention', 'element.value.subValue', 'subElement')
  ->get()
  ->random();



use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

$target = Target::with('dimention', 'element.value.subValue', 'subElement')
  ->get()
  ->random();



Project::get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

$target = Target::with('dimention', 'element.value.subValue', 'subElement')
  ->get()
  ->random();



$projects = Project::factory()->count(10)->create();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

$projects = Project::factory()->count(10)->create();
foreach ($projects as $project) {
  $target = Target::with('dimention', 'element.value.subValue', 'subElement')
	->get()
	->random();

  $value = $target->element->value->first();
  $subValue = $value->subValue->first();

  $data = [
	'project_id' => $project->id,
	'phase' => $project->phase,
	'dimention_id' => $target->dimention->id,
	'element_id' => $target->element->id,
	'sub_element_id' => $target->subElement->id,
	'value_id' => $value->id,
	'sub_value_id' => $subValue->id,
	'target_id' => $target->id,
  ];

  ProjectTarget::create($data);
}
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

$projects = Project::factory()->count(10)->create();
foreach ($projects as $project) {
  $target = Target::with('dimention', 'element.value.subValue', 'subElement')
	->get()
	->random();

  $value = $target->element->value->first();
  $subValue = $value->subValue->first();

  $data = [
	'project_id' => $project->id,
	'phase' => $project->phase,
	'dimention_id' => $target->dimention->first()->id,
	'element_id' => $target->element->first()->id,
	'sub_element_id' => $target->subElement->first()->id,
	'value_id' => $value->id,
	'sub_value_id' => $subValue->id,
	'target_id' => $target->id,
  ];

  ProjectTarget::create($data);
}
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

ProjectTarget::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

ProjectTarget::with('project')->get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


Project::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


Project::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


Project::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


Project::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


Project::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


Project::factory()->count(10)->create();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('studentGrade')->get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;




StudentGrade::get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();

use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();

use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();

use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();

use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();

use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;





use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;



Project::with('grade')->get();

use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;






Project::whereHas('grade')->get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;






Project::whereHas('grade.studentGrade')->get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;






Project::whereHas('grade')->with('grade')->get()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;






Project::whereHas('grade')->with('grade')->get()->toArray()
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;

ProjectTarget::with('project')->get();
use App\Enums\CategoryLegerEnum;
use App\Models\Leger;
use App\Enums\CurriculumEnum;
use App\Models\Competency;
use App\Models\Scopes\AcademicYearScope;
use App\Enums\SemesterEnum;
use App\Enums\PhaseEnum;
use App\Models\StudentCompetency;


ProjectStudent::get();
